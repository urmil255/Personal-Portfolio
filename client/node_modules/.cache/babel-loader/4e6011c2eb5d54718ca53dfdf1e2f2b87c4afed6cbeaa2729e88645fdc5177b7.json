{"ast":null,"code":"import _slicedToArray from\"C:/Users/admin/OneDrive/Desktop/portfolio/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React from'react';import{useState}from'react';import{TOTAL_SCREENS}from'../../../../utilities/commonUtils';import{GET_SCREEN_INDEX}from'../../../../utilities/commonUtils';import ScrollService from'../../../../utilities/ScrollService';import{faBars}from'@fortawesome/free-solid-svg-icons';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import'./Header.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Header(){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),selectedScreen=_useState2[0],setSelectedScreen=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),showHeaderOptions=_useState4[0],setShowHeaderOptions=_useState4[1];var updateCurrentScreen=function updateCurrentScreen(currentScreen){if(!currentScreen||!currentScreen.screenInView)return;var screenIndex=GET_SCREEN_INDEX(currentScreen.screenInView);if(screenIndex<0)return;};var currentScreenSubscription=ScrollService.currentScreenBroadcaster.subscribe(updateCurrentScreen);var getHeaderOptions=function getHeaderOptions(){return TOTAL_SCREENS.map(function(screen,i){return/*#__PURE__*/_jsx(\"div\",{className:getHeaderOptionsClass(i),onClick:function onClick(){return switchScreen(i,screen);},children:/*#__PURE__*/_jsx(\"span\",{children:screen.screen_name})},screen.screen_name);});};var getHeaderOptionsClass=function getHeaderOptionsClass(index){var classes=\"header-option\";if(index<TOTAL_SCREENS.length-1)classes+=\"header-option-seperator\";if(selectedScreen===index)classes+=\"selected-header-option\";return;};var switchScreen=function switchScreen(index,screen){var screenComponent=document.getElementById(screen.screen_name);if(!screenComponent)return;screenComponent.scrollIntoView({behavior:\"smooth\"});setSelectedScreen(index);setShowHeaderOptions(false);};return/*#__PURE__*/_jsx(\"div\",{className:\"header-container\",onClick:function onClick(){return setShowHeaderOptions(!showHeaderOptions);},children:/*#__PURE__*/_jsxs(\"div\",{className:\"header-parent\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"header-hamburger\",onClick:function onClick(){return setShowHeaderOptions(!showHeaderOptions);},children:/*#__PURE__*/_jsx(FontAwesomeIcon,{className:\"header-hamburger-bars\",icon:faBars})}),/*#__PURE__*/_jsx(\"div\",{className:\"header-logo\",children:/*#__PURE__*/_jsx(\"span\",{children:\"URMIL TRIVEDI\"})}),/*#__PURE__*/_jsx(\"div\",{className:showHeaderOptions?\" header-options show-hamburger-options\":\"header-options\",children:getHeaderOptions()})]})});}","map":{"version":3,"names":["React","useState","TOTAL_SCREENS","GET_SCREEN_INDEX","ScrollService","faBars","FontAwesomeIcon","Header","selectedScreen","setSelectedScreen","showHeaderOptions","setShowHeaderOptions","updateCurrentScreen","currentScreen","screenInView","screenIndex","currentScreenSubscription","currentScreenBroadcaster","subscribe","getHeaderOptions","map","screen","i","getHeaderOptionsClass","switchScreen","screen_name","index","classes","length","screenComponent","document","getElementById","scrollIntoView","behavior"],"sources":["C:/Users/admin/OneDrive/Desktop/portfolio/client/src/ProfileContainer/Home/Home/Header/Header.js"],"sourcesContent":["import React from 'react'\r\nimport { useState } from 'react'\r\nimport { TOTAL_SCREENS } from '../../../../utilities/commonUtils'\r\nimport { GET_SCREEN_INDEX } from '../../../../utilities/commonUtils'\r\nimport ScrollService from '../../../../utilities/ScrollService'\r\nimport {faBars} from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport './Header.css'\r\n\r\n\r\nexport default function Header() {\r\n    const[selectedScreen,setSelectedScreen]=useState(0)\r\n    const[showHeaderOptions,setShowHeaderOptions]=useState(false)\r\n\r\n    const updateCurrentScreen=(currentScreen)=>\r\n    {\r\n        if(!currentScreen || !currentScreen.screenInView)\r\n        return;\r\n        let screenIndex=GET_SCREEN_INDEX(currentScreen.screenInView)\r\n        if(screenIndex<0)\r\n        return\r\n    }\r\n    let currentScreenSubscription=ScrollService.currentScreenBroadcaster.subscribe(updateCurrentScreen)\r\n    const getHeaderOptions=()=>{\r\n        return (\r\n          TOTAL_SCREENS.map((screen,i)=>(\r\n          <div key={screen.screen_name} className={getHeaderOptionsClass(i)}\r\n          onClick={() =>switchScreen(i,screen)\r\n           }>\r\n            <span>{screen.screen_name}</span>\r\n      </div>\r\n    \r\n    ))\r\n    \r\n    \r\n  )\r\n}\r\n\r\nconst getHeaderOptionsClass=(index) =>{\r\n  let classes =\"header-option\";\r\n  if(index<TOTAL_SCREENS.length-1)\r\n  classes+=\"header-option-seperator\";\r\n\r\n  if(selectedScreen===index)\r\n  classes+=\"selected-header-option\";\r\n  return \r\n}\r\n\r\nconst switchScreen=(index,screen)=>{\r\n  let screenComponent=document.getElementById(screen.screen_name)\r\n  if(!screenComponent)\r\n  return \r\n\r\n  screenComponent.scrollIntoView({behavior:\"smooth\"});\r\n  setSelectedScreen(index)\r\n  setShowHeaderOptions(false)\r\n};\r\n\r\n\r\nreturn(\r\n    <div className='header-container' onClick={()=> setShowHeaderOptions(!showHeaderOptions)}>\r\n    <div className='header-parent'>\r\n      <div className='header-hamburger' onClick={()=>  setShowHeaderOptions(!showHeaderOptions) }>\r\n      <FontAwesomeIcon className='header-hamburger-bars' icon={faBars}/>\r\n      </div>\r\n      < div className='header-logo'>\r\n        <span>\r\n          URMIL TRIVEDI\r\n         \r\n        </span>\r\n      </div>\r\n      <div className={(showHeaderOptions)? \" header-options show-hamburger-options\"\r\n      :\"header-options\"}>\r\n      {getHeaderOptions()}\r\n    \r\n\r\n    </div>\r\n    </div>\r\n\r\n  </div>\r\n)\r\n}\r\n"],"mappings":"sIAAA,MAAOA,MAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,KAAQ,OAAO,CAChC,OAASC,aAAa,KAAQ,mCAAmC,CACjE,OAASC,gBAAgB,KAAQ,mCAAmC,CACpE,MAAOC,cAAa,KAAM,qCAAqC,CAC/D,OAAQC,MAAM,KAAO,mCAAmC,CACxD,OAASC,eAAe,KAAQ,gCAAgC,CAChE,MAAO,cAAc,yFAGrB,cAAe,SAASC,OAAM,EAAG,CAC7B,cAAwCN,QAAQ,CAAC,CAAC,CAAC,wCAA7CO,cAAc,eAACC,iBAAiB,eACtC,eAA8CR,QAAQ,CAAC,KAAK,CAAC,yCAAvDS,iBAAiB,eAACC,oBAAoB,eAE5C,GAAMC,oBAAmB,CAAC,QAApBA,oBAAmB,CAAEC,aAAa,CACxC,CACI,GAAG,CAACA,aAAa,EAAI,CAACA,aAAa,CAACC,YAAY,CAChD,OACA,GAAIC,YAAW,CAACZ,gBAAgB,CAACU,aAAa,CAACC,YAAY,CAAC,CAC5D,GAAGC,WAAW,CAAC,CAAC,CAChB,OACJ,CAAC,CACD,GAAIC,0BAAyB,CAACZ,aAAa,CAACa,wBAAwB,CAACC,SAAS,CAACN,mBAAmB,CAAC,CACnG,GAAMO,iBAAgB,CAAC,QAAjBA,iBAAgB,EAAK,CACvB,MACEjB,cAAa,CAACkB,GAAG,CAAC,SAACC,MAAM,CAACC,CAAC,qBAC3B,YAA8B,SAAS,CAAEC,qBAAqB,CAACD,CAAC,CAAE,CAClE,OAAO,CAAE,yBAAKE,aAAY,CAACF,CAAC,CAACD,MAAM,CAAC,EAClC,uBACA,sBAAOA,MAAM,CAACI,WAAW,EAAQ,EAHzBJ,MAAM,CAACI,WAAW,CAI1B,EAEP,CAAC,CAIN,CAAC,CAED,GAAMF,sBAAqB,CAAC,QAAtBA,sBAAqB,CAAEG,KAAK,CAAI,CACpC,GAAIC,QAAO,CAAE,eAAe,CAC5B,GAAGD,KAAK,CAACxB,aAAa,CAAC0B,MAAM,CAAC,CAAC,CAC/BD,OAAO,EAAE,yBAAyB,CAElC,GAAGnB,cAAc,GAAGkB,KAAK,CACzBC,OAAO,EAAE,wBAAwB,CACjC,OACF,CAAC,CAED,GAAMH,aAAY,CAAC,QAAbA,aAAY,CAAEE,KAAK,CAACL,MAAM,CAAG,CACjC,GAAIQ,gBAAe,CAACC,QAAQ,CAACC,cAAc,CAACV,MAAM,CAACI,WAAW,CAAC,CAC/D,GAAG,CAACI,eAAe,CACnB,OAEAA,eAAe,CAACG,cAAc,CAAC,CAACC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CACnDxB,iBAAiB,CAACiB,KAAK,CAAC,CACxBf,oBAAoB,CAAC,KAAK,CAAC,CAC7B,CAAC,CAGD,mBACI,YAAK,SAAS,CAAC,kBAAkB,CAAC,OAAO,CAAE,yBAAKA,qBAAoB,CAAC,CAACD,iBAAiB,CAAC,EAAC,uBACzF,aAAK,SAAS,CAAC,eAAe,wBAC5B,YAAK,SAAS,CAAC,kBAAkB,CAAC,OAAO,CAAE,yBAAMC,qBAAoB,CAAC,CAACD,iBAAiB,CAAC,EAAE,uBAC3F,KAAC,eAAe,EAAC,SAAS,CAAC,uBAAuB,CAAC,IAAI,CAAEL,MAAO,EAAE,EAC5D,cACN,YAAM,SAAS,CAAC,aAAa,uBAC3B,uCAGO,EACH,cACN,YAAK,SAAS,CAAGK,iBAAiB,CAAG,wCAAwC,CAC5E,gBAAiB,UACjBS,gBAAgB,EAAE,EAGf,GACA,EAEF,CAER"},"metadata":{},"sourceType":"module","externalDependencies":[]}