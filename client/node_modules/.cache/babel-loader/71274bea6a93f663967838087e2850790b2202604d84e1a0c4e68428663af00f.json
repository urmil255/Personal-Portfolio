{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\admin\\\\OneDrive\\\\Desktop\\\\portfolio\\\\client\\\\src\\\\ProfileContainer\\\\Home\\\\Home\\\\Header\\\\Header.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport { TOTAL_SCREENS } from '../../../../utilities/commonUtils';\nimport { GET_SCREEN_INDEX } from '../../../../utilities/commonUtils';\nimport ScrollService from '../../../../utilities/ScrollService';\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './Header.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Header() {\n  _s();\n  const [selectedScreen, setSelectedScreen] = useState(0);\n  const [showHeaderOptions, setShowHeaderOptions] = useState(false);\n  const updateCurrentScreen = currentScreen => {\n    if (!currentScreen || !currentScreen.screenInView) return;\n    let screenIndex = GET_SCREEN_INDEX(currentScreen.screenInView);\n    if (screenIndex < 0) return;\n  };\n  let currentScreenSubscription = ScrollService.currentScreenBroadcaster.subscribe(updateCurrentScreen);\n  const getHeaderOptions = () => {\n    return TOTAL_SCREENS.map((screen, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: getHeaderOptionsClass(i),\n      onClick: () => switchScreen(i, screen),\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: screen.screen_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this)\n    }, screen.screen_name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }, this));\n  };\n  const getHeaderOptionsClass = index => {\n    let classes = \"header-option\";\n    if (index < TOTAL_SCREENS.length - 1) classes += \"header-option-seperator\";\n    if (selectedScreen === index) classes += \"selected-header-option\";\n    return;\n  };\n  const switchScreen = (index, screen) => {\n    let screenComponent = document.getElementById(screen.screen_name);\n    if (!screenComponent) return;\n    screenComponent.scrollIntoView({\n      behavior: \"smooth\"\n    });\n    setSelectedScreen(index);\n    setShowHeaderOptions(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header-container\",\n    onClick: () => setShowHeaderOptions(!showHeaderOptions),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-parent\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-hamburger\",\n        onClick: () => setShowHeaderOptions(!showHeaderOptions),\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          className: \"header-hamburger-bars\",\n          icon: faBars\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-logo\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"URMIL TRIVEDI\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: showHeaderOptions ? \" header-options show-hamburger-options\" : \"header-options\",\n        children: getHeaderOptions()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(Header, \"ITy0lNE551wQ6Hqa28SZbir67T0=\");\n_c = Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useState","TOTAL_SCREENS","GET_SCREEN_INDEX","ScrollService","faBars","FontAwesomeIcon","Header","selectedScreen","setSelectedScreen","showHeaderOptions","setShowHeaderOptions","updateCurrentScreen","currentScreen","screenInView","screenIndex","currentScreenSubscription","currentScreenBroadcaster","subscribe","getHeaderOptions","map","screen","i","getHeaderOptionsClass","switchScreen","screen_name","index","classes","length","screenComponent","document","getElementById","scrollIntoView","behavior"],"sources":["C:/Users/admin/OneDrive/Desktop/portfolio/client/src/ProfileContainer/Home/Home/Header/Header.js"],"sourcesContent":["import React from 'react'\r\nimport { useState } from 'react'\r\nimport { TOTAL_SCREENS } from '../../../../utilities/commonUtils'\r\nimport { GET_SCREEN_INDEX } from '../../../../utilities/commonUtils'\r\nimport ScrollService from '../../../../utilities/ScrollService'\r\nimport {faBars} from '@fortawesome/free-solid-svg-icons'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport './Header.css'\r\n\r\n\r\nexport default function Header() {\r\n    const[selectedScreen,setSelectedScreen]=useState(0)\r\n    const[showHeaderOptions,setShowHeaderOptions]=useState(false)\r\n\r\n    const updateCurrentScreen=(currentScreen)=>\r\n    {\r\n        if(!currentScreen || !currentScreen.screenInView)\r\n        return;\r\n        let screenIndex=GET_SCREEN_INDEX(currentScreen.screenInView)\r\n        if(screenIndex<0)\r\n        return\r\n    }\r\n    let currentScreenSubscription=ScrollService.currentScreenBroadcaster.subscribe(updateCurrentScreen)\r\n    const getHeaderOptions=()=>{\r\n        return (\r\n          TOTAL_SCREENS.map((screen,i)=>(\r\n          <div key={screen.screen_name} className={getHeaderOptionsClass(i)}\r\n          onClick={() =>switchScreen(i,screen)\r\n           }>\r\n            <span>{screen.screen_name}</span>\r\n      </div>\r\n    \r\n    ))\r\n    \r\n    \r\n  )\r\n}\r\n\r\nconst getHeaderOptionsClass=(index) =>{\r\n  let classes =\"header-option\";\r\n  if(index<TOTAL_SCREENS.length-1)\r\n  classes+=\"header-option-seperator\";\r\n\r\n  if(selectedScreen===index)\r\n  classes+=\"selected-header-option\";\r\n  return \r\n}\r\n\r\nconst switchScreen=(index,screen)=>{\r\n  let screenComponent=document.getElementById(screen.screen_name)\r\n  if(!screenComponent)\r\n  return \r\n\r\n  screenComponent.scrollIntoView({behavior:\"smooth\"});\r\n  setSelectedScreen(index)\r\n  setShowHeaderOptions(false)\r\n};\r\n\r\n\r\nreturn(\r\n    <div className='header-container' onClick={()=> setShowHeaderOptions(!showHeaderOptions)}>\r\n    <div className='header-parent'>\r\n      <div className='header-hamburger' onClick={()=>  setShowHeaderOptions(!showHeaderOptions) }>\r\n      <FontAwesomeIcon className='header-hamburger-bars' icon={faBars}/>\r\n      </div>\r\n      < div className='header-logo'>\r\n        <span>\r\n          URMIL TRIVEDI\r\n         \r\n        </span>\r\n      </div>\r\n      <div className={(showHeaderOptions)? \" header-options show-hamburger-options\"\r\n      :\"header-options\"}>\r\n      {getHeaderOptions()}\r\n    \r\n\r\n    </div>\r\n    </div>\r\n\r\n  </div>\r\n)\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}